name: CI

on:
  push:
    branches: [ main, develop, feature/*, hotfix/* ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Cache Jest
      uses: actions/cache@v3
      with:
        path: ~/.cache/jest
        key: ${{ runner.os }}-jest-${{ hashFiles('**/package-lock.json') }}-${{ matrix.node-version }}
        restore-keys: |
          ${{ runner.os }}-jest-${{ hashFiles('**/package-lock.json') }}-
          ${{ runner.os }}-jest-
          
    - name: Cache TypeScript
      uses: actions/cache@v3
      with:
        path: ~/.cache/typescript
        key: ${{ runner.os }}-tsc-${{ hashFiles('**/tsconfig.json') }}-${{ matrix.node-version }}
        restore-keys: |
          ${{ runner.os }}-tsc-${{ hashFiles('**/tsconfig.json') }}-
          ${{ runner.os }}-tsc-
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linting (业务代码)
      run: eslint src --ext .ts --max-warnings 0 --ignore-pattern src/__tests__/**

    - name: Run linting (测试代码，允许 warning)
      run: eslint src/__tests__ --ext .ts || true
      
    - name: Run type checking
      run: npm run type-check
      
    - name: Run tests with coverage
      run: npm run test:coverage
      
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
        
    - name: Run build test
      run: npm run build
      
    - name: Security audit
      run: npm audit --audit-level moderate
      
    - name: Test summary
      if: always()
      run: |
        echo "=== Test Summary ==="
        echo "Node.js version: ${{ matrix.node-version }}"
        echo "Test coverage: $(cat coverage/coverage-summary.json | jq -r '.total.lines.pct')%"
        echo "Build status: ${{ job.status }}"
        
    - name: Upload test results
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ matrix.node-version }}
        path: |
          coverage/
          .jest/

  docker-build-test:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build Docker image (test only)
      run: |
        docker build -t qq14-wesignbot:test .
        docker run --rm qq14-wesignbot:test npm test 